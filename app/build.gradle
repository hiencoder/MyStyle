apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.hiennv.mystyle"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dependencies {
        implementation fileTree(include: ['*.jar'], dir: 'libs')
        implementation 'com.android.support:appcompat-v7:27.1.1'
        implementation 'com.android.support.constraint:constraint-layout:1.1.3'
        implementation 'com.android.support:support-v4:27.1.1'
        testImplementation 'junit:junit:4.12'
        androidTestImplementation 'com.android.support.test:runner:1.0.2'
        androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
        implementation 'com.android.support:design:27.1.1'
        implementation 'com.android.support:recyclerview-v7:27.1.1'
        implementation 'com.android.support:cardview-v7:27.1.1'
        //ButterKnife
        implementation 'com.jakewharton:butterknife:8.8.1'
        annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
        implementation 'jp.wasabeef:recyclerview-animators:2.3.0'
        implementation(
                [group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.7'],
                [group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.7'],
                [group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.7']
        )
        implementation 'com.squareup.haha:haha:2.0.4'
        def lifecycle_version = "1.1.1"

        // ViewModel and LiveData
        implementation "android.arch.lifecycle:extensions:$lifecycle_version"

        // alternatively - just ViewModel
        implementation "android.arch.lifecycle:viewmodel:$lifecycle_version"

        // use -ktx for Kotlin

        // alternatively - just LiveData
        implementation "android.arch.lifecycle:livedata:$lifecycle_version"

        // alternatively - Lifecycles only (no ViewModel or LiveData).

        //     Support library depends on this lightweight import
        implementation "android.arch.lifecycle:runtime:$lifecycle_version"
        annotationProcessor "android.arch.lifecycle:compiler:$lifecycle_version"

        // use kapt for Kotlin

        // alternately - if using Java8, use the following instead of compiler
        implementation "android.arch.lifecycle:common-java8:$lifecycle_version"

        // optional - ReactiveStreams support for LiveData
        implementation "android.arch.lifecycle:reactivestreams:$lifecycle_version"

        // optional - Test helpers for LiveData
        testImplementation "android.arch.core:core-testing:$lifecycle_version"
        def room_version = "1.1.1"
        implementation "android.arch.persistence.room:runtime:$room_version"
        annotationProcessor "android.arch.persistence.room:compiler:$room_version"

        // use kapt for Kotlin

        // optional - RxJava support for Room
        implementation "android.arch.persistence.room:rxjava2:$room_version"

        // optional - Guava support for Room, including Optional and ListenableFuture
        implementation "android.arch.persistence.room:guava:$room_version"

        // Test helpers
        testImplementation "android.arch.persistence.room:testing:$room_version"
        def paging_version = "1.0.0"
        implementation "android.arch.paging:runtime:$paging_version"

        // alternatively - without Android dependencies for testing
        testImplementation "android.arch.paging:common:$paging_version"
        // optional - RxJava support

        //implementation "android.arch.paging:rxjava2:$paging_version"
        def nav_version = "1.0.0-alpha06"
        implementation "android.arch.navigation:navigation-fragment:$nav_version"
        // use -ktx for Kotlin
        implementation "android.arch.navigation:navigation-ui:$nav_version"
        // use -ktx for Kotlin
        // optional - Test helpers
        androidTestImplementation "android.arch.navigation:navigation-testing:$nav_version"
        // use -ktx for Kotlin

        //Permission
        implementation "com.karumi:dexter:$rootProject.dexterVersion"

        //rxjava, android
        implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxJavaVersion"
        implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroidVersion"
        implementation 'com.squareup.retrofit2:adapter-rxjava:2.1.0'

        //Dagger
        implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
        annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"

        //retrofit
        implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
        implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"

        //OkHttp
        implementation "com.squareup.okhttp3:okhttp:$rootProject.okHttpVersion"
        implementation 'com.squareup.okio:okio:1.14.0'
        implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'
        //glide
        implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
        annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.glideVersion"

        //timber
        implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"

        //leakCanary
        debugImplementation "com.squareup.leakcanary:leakcanary-android:$rootProject.leakCanaryVersion"
        releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leakCanaryVersion"
        // Optional, if you use support library fragments:
        debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$rootProject.leakCanaryVersion"

        //Keyboard dismiss
        implementation "com.gabrielsamojlo.keyboarddismisser:keyboard-dismisser:$rootProject.keyboardDismissVersion"

        //Calligraphy
        implementation "uk.co.chrisjenx:calligraphy:$rootProject.calligraphyVersion"


        /*Crop image*/
        //compile 'com.theartofdev.edmodo:android-image-cropper:2.7.+'
        implementation "com.github.zomato:androidphotofilters:$rootProject.photoFilterVersion"

        /*GifView*/
        implementation "com.github.Cutta:GifView:$rootProject.gifViewVersion"

        //EventBus
        implementation "org.greenrobot:eventbus:$rootProject.eventBusVersion"

        implementation('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') {
            transitive = true
        }

        implementation 'com.sothree.slidinguppanel:library:3.4.0'

        implementation 'com.android.support:multidex:1.0.3'

        implementation 'com.facebook.stetho:stetho:1.5.0'
        implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    }
}

